{"version":3,"sources":["assets/noImage.png","Components/movieItem.js","Components/nominationItem.js","App.js","util.js","theme.js","index.js"],"names":["module","exports","useStyles","makeStyles","theme","root","display","media","height","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","textBold","fontWeight","cardHeader","overflow","title","padding","spacing","textAlign","movieDetails","flexDirection","nominateButton","alignItems","paddingLeft","paddingBottom","maxWidth","MovieItem","props","classes","handleNominate","data","isNominated","bid","apiKey","React","useState","expanded","setExpanded","extraData","setExtraData","shadow","setShadow","handleExpandClick","JSON","stringify","searchOMDB","Title","fetch","method","then","response","json","Response","catch","err","console","log","Accordion","onClick","style","backgroundColor","varient","onMouseOut","onMouseOver","elevation","id","data-key","imdbID","AccordionSummary","expandIcon","fontSize","aria-controls","width","src","Poster","noImage","alt","Grid","container","justify","item","xs","Card","Typography","className","variant","Button","type","fullWidth","color","disabled","AccordionDetails","Divider","paragraph","Released","Runtime","Language","Actors","Plot","image","NominationItem","handleRemoveNominate","startIcon","nominations","searchList","background","position","top","left","zIndex","textBar","listContainer","text","particleBubbleParams","App","searchTerm","setSearchTerm","setApiKey","nominationsElements","setNominationsElements","searchListElements","setSearchListElements","nominationsComplete","setNominationsComplete","searchTermDisplay","setSearchTermDisplay","useEffect","parse","localStorage","getItem","event","stopPropagation","itemIndex","target","parentNode","newNominations","concat","nomination","push","setItem","addNominationLocally","length","slice","splice","index","RemoveNominationLocally","params","component","gutterBottom","Container","Box","my","TextField","name","label","size","autoFocus","onInput","e","value","trim","onSubmit","preventDefault","Search","InputProps","endAdornment","InputAdornment","IconButton","disableFocusRipple","disableRipple","map","omdbData","i","createMuiTheme","palette","primary","main","ReactDOM","render","ThemeProvider","CssBaseline","document","querySelector"],"mappings":"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","file":"static/js/main.6a293e0f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/noImage.104a1a91.png\";","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport Typography from '@material-ui/core/Typography';\nimport noImage from \"../assets/noImage.png\";\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport Grid from '@material-ui/core/Grid';\nimport Divider from '@material-ui/core/Divider';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex'\n    },\n    media: {\n        height: 0,\n        paddingTop: '100%', // 16:9\n    },\n    expand: {\n        transform: 'rotate(0deg)',\n        marginLeft: 'auto',\n        transition: theme.transitions.create('transform', {\n            duration: theme.transitions.duration.shortest,\n        }),\n    },\n    expandOpen: {\n        transform: 'rotate(180deg)',\n    },\n    textBold: {\n        fontWeight: 600\n    },\n    cardHeader: {\n        overflow: \"hidden\",\n    },\n    title: {\n        padding: theme.spacing(3),\n        textAlign: 'center',\n    },\n    movieDetails: {\n        flexDirection: \"column\"\n    },\n    nominateButton: {\n        alignItems: 'center',\n        paddingLeft: theme.spacing(1),\n        paddingBottom: theme.spacing(1),\n        maxWidth: \"60%\",\n        marginLeft: \"20%\"\n    },\n}));\n\nexport default function MovieItem(props) {\n    const classes = useStyles();\n    const { handleNominate, data, isNominated, bid, apiKey } = props;\n    const [expanded, setExpanded] = React.useState(false);\n    const [extraData, setExtraData] = React.useState({});\n    const [shadow, setShadow] = React.useState(0);\n\n    const handleExpandClick = () => {\n        if (JSON.stringify(extraData) === '{}') {\n            // eslint-disable-next-line\n            const searchOMDB = \"https://www.omdbapi.com/?apikey=\" + apiKey + \"&\" + \"t=\" + data.Title + \"&\" + \"plot=full&\";\n            fetch(searchOMDB, {\n                method: 'GET',\n            })\n                .then(response => response.json())\n                .then(data => {\n                    if (data.Response === \"True\") {\n                        setExtraData(data);\n                    }\n                    setExpanded(!expanded);\n                })\n                .catch(err => {\n                    console.log(err)\n                });\n        } else {\n            setExpanded(!expanded);\n        }\n    };\n\n    return (\n        <Accordion onClick={handleExpandClick} style={shadow === 0 ? {} : { backgroundColor: \"rgba(255, 255, 255, 0.08)\" }} varient=\"elevation\" onMouseOut={() => setShadow(0)} onMouseOver={() => setShadow(24)} elevation={shadow} id={bid} data-key={data.imdbID}>\n            <AccordionSummary\n                expandIcon={<ExpandMoreIcon style={{ fontSize: 40 }} />}\n                aria-controls={\"panel\" + { bid } + \"bh-content\"}\n                id={\"panel\" + { bid } + \"bh-header\"}\n            >\n                <img width=\"22%\" height=\"21%\" src={data.Poster === \"N/A\" ? noImage : data.Poster} alt=\"new\"/>\n\n                <Grid container alignItems=\"center\" justify=\"center\" spacing={0}>\n                    <Grid item xs={12}>\n                        <Card style={{ backgroundColor: \"#303030\" }}>\n                            <Typography className={classes.title} variant=\"h5\">\n                                {data.Title}\n                            </Typography>\n                        </Card>\n\n                    </Grid>\n\n                    <Grid item xs={12}>\n                        <Button\n                            className={classes.nominateButton}\n                            type=\"submit\"\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                            id={bid}\n                            onClick={handleNominate}\n                            disabled={isNominated}\n                        >\n                            Nominate\n            </Button>\n                    </Grid>\n                </Grid>\n            </AccordionSummary>\n\n            <AccordionDetails onClick={handleExpandClick} className={classes.movieDetails}>\n                <Divider />\n                <Typography variant=\"h6\" className={classes.textBold} paragraph>Released:</Typography>\n                <Typography paragraph>\n                    {extraData.Released}\n                </Typography>\n                <Typography variant=\"h6\" className={classes.textBold} paragraph>Runtime:</Typography>\n                <Typography paragraph>\n                    {extraData.Runtime}\n                </Typography>\n                <Typography variant=\"h6\" className={classes.textBold} paragraph>Language:</Typography>\n                <Typography paragraph>\n                    {extraData.Language}\n                </Typography>\n                <Typography variant=\"h6\" className={classes.textBold} paragraph>Actors:</Typography>\n                <Typography paragraph>\n                    {extraData.Actors}\n                </Typography>\n                <Typography variant=\"h6\" className={classes.textBold} paragraph>Plot:</Typography>\n                <Typography paragraph>\n                    {extraData.Plot}\n                </Typography>\n            </AccordionDetails>\n        </Accordion>\n    );\n}","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport Grid from '@material-ui/core/Grid';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nconst useStyles = makeStyles((theme) => ({\n    image: {\n        display: \"flex\",\n        height: \"70%\",\n        width: \"100%\"\n    },\n\n}));\n\nexport default function NominationItem(props) {\n    const classes = useStyles();\n    const { handleRemoveNominate, data, bid, } = props;\n    const [shadow, setShadow] = React.useState(0);\n\n    return (\n        <Accordion style={shadow === 0 ? {} : { backgroundColor: \"rgba(255, 255, 255, 0.08)\" }} varient=\"elevation\" onMouseOut={() => setShadow(0)} onMouseOver={() => setShadow(24)} elevation={shadow} id={bid} data-key={data.imdbID}>\n            <AccordionSummary\n                expandIcon={<ExpandMoreIcon />}\n                aria-controls={\"panel\" + { bid } + \"bh-content\"}\n                id={\"panel\" + { bid } + \"bh-header\"}\n            >\n                <Grid container spacing={1}>\n                    <Grid item xs={12}>\n                        <Button\n                            startIcon={<DeleteIcon />}\n                            type=\"submit\"\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"secondary\"\n                            id={bid}\n                            onClick={handleRemoveNominate}\n                        >\n                            Remove\n                        </Button>\n                    </Grid>\n                    <Grid item xs={12}>\n\n                        <Typography variant=\"h6\">\n                            {data.Title}\n                        </Typography>\n                    </Grid>\n\n                </Grid>\n            </AccordionSummary>\n            <AccordionDetails>\n                <img className={classes.image} src={data.Poster} alt=\"new\" />\n            </AccordionDetails>\n        </Accordion>\n    );\n}\n","import React from 'react';\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport MovieItem from './Components/movieItem'\nimport NominationItem from './Components/nominationItem'\nimport { addNominationLocally, RemoveNominationLocally, getNominationsLocally } from './util';\nimport Card from '@material-ui/core/Card';\nimport SearchIcon from '@material-ui/icons/Search';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport Particles from 'react-particles-js';\n\n\nconst useStyles = makeStyles((theme) => ({\n    nominations: {\n        width: '100%',\n    },\n    searchList: {\n        width: '100%',\n    },\n    background: {\n        position: \"fixed\",\n        top: 0,\n        left: 0,\n        width: \"100%\",\n        height: \"100%\",\n        zIndex: \"-1\",\n        backgroundColor: \"#00091A\"\n    },\n    textBar: {\n        width: \"100%\",\n        padding: theme.spacing(0.5),\n    },\n    title: {\n        padding: theme.spacing(1),\n        textAlign: 'center',\n        fontWeight: 600,\n        width: \"100%\"\n    },\n    listContainer: {\n        paddingTop: theme.spacing(3),\n    },\n    text: {\n        padding: theme.spacing(1),\n    }\n}));\n\nconst particleBubbleParams = {\n    \"particles\": {\n        \"number\": {\n            \"value\": 160,\n            \"density\": {\n                \"enable\": false\n            }\n        },\n        \"color\": {\n            \"value\": [\"#ffffff\",\"#FF00FF\"]\n        },\n        \"size\": {\n            \"value\": 7,\n            \"random\": true,\n            \"anim\": {\n                \"speed\": 2,\n                \"size_min\": 0.3\n            }\n        },\n        \"line_linked\": {\n            \"enable\": false\n        },\n        \"move\": {\n            \"random\": true,\n            \"speed\": 1,\n            \"direction\": \"top\",\n            \"out_mode\": \"out\"\n        },\n    },\n};\n\nexport default function App() {\n    const classes = useStyles();\n    const [searchTerm, setSearchTerm] = React.useState(\"\");\n    const [apiKey, setApiKey] = React.useState(\"\");\n    const [nominationsElements, setNominationsElements] = React.useState([]);\n    const [searchListElements, setSearchListElements] = React.useState([]);\n    const [nominationsComplete, setNominationsComplete] = React.useState(false);\n    const [searchTermDisplay, setSearchTermDisplay] = React.useState(\"\");\n\n    React.useEffect(() => {\n        const nominations = getNominationsLocally();\n        if (nominations) {\n            setNominationsElements(nominations);\n        }\n    }, []);\n\n    const handleNominate = (event, data) => {\n        event.stopPropagation();\n        let itemIndex = event.target.id;\n        if (!event.target.id) {\n            itemIndex = event.target.parentNode.id;\n        }\n        const newNominations = nominationsElements.concat([searchListElements[itemIndex]]);\n        setNominationsElements(newNominations);\n\n        addNominationLocally(searchListElements[itemIndex]);\n\n        if (newNominations.length >= 5) {\n            setNominationsComplete(true);\n        }\n    }\n\n    const handleRemoveNominate = (event) => {\n        event.stopPropagation();\n        let itemIndex = event.target.id;\n        if (!event.target.id) {\n            itemIndex = event.target.parentNode.id;\n        }\n        const newNominations = nominationsElements.slice();\n        newNominations.splice(itemIndex, 1);\n        setNominationsElements(newNominations);\n\n        RemoveNominationLocally(itemIndex);\n\n        if (newNominations.length < 5) {\n            setNominationsComplete(false);\n        }\n    }\n\n    const handleSearchTermChange = (event) => {\n        event.preventDefault();\n        // eslint-disable-next-line\n        const searchOMDB = \"https://www.omdbapi.com/?apikey=\" + apiKey + \"&\" + \"s=\" + searchTerm + \"&\";\n        fetch(searchOMDB, {\n            method: 'GET',\n        })\n            .then(response => response.json())\n            .then(data => {\n                if (data.Response === \"True\") {\n                    setSearchListElements(data.Search);\n                    setSearchTermDisplay(searchTerm);\n                } else {\n                    setSearchListElements([]);\n                }\n            })\n            .catch(err => {\n                console.log(err)\n            });\n    }\n\n    return (\n        <div>\n            <Particles params={particleBubbleParams} className={classes.background} />\n            <Typography className={classes.title} variant=\"h3\" component=\"h1\" gutterBottom>\n                    The Shoppies\n            </Typography>\n            <Container>\n                <Box my={6}>\n                    <Grid container spacing={3}>\n                        <Grid item xs={5}>\n                            <TextField\n                                className={classes.textBar}\n                                name=\"OMDB API key\"\n                                variant=\"filled\"\n                                label=\"API KEY\"\n                                size=\"small\"\n                                autoFocus\n                                onInput={e => setApiKey(e.target.value.trim())}\n                            />\n                            <form onSubmit={handleSearchTermChange}>\n                                <TextField\n                                    className={classes.textBar}\n                                    name=\"searchBar\"\n                                    variant=\"filled\"\n                                    label=\"Search Movies\"\n                                    size=\"small\"\n                                    autoFocus\n                                    onInput={e => setSearchTerm(e.target.value.trim())}\n                                    InputProps={{\n                                        endAdornment: (\n                                            <InputAdornment>\n                                                <IconButton type=\"Submit\" disableFocusRipple={true} disableRipple={true}>\n                                                    <SearchIcon />\n                                                </IconButton>\n                                            </InputAdornment>\n                                        )\n                                    }}\n                                />\n                            </form>\n                        </Grid>\n                        <Grid item xs>\n                            {nominationsElements.length < 5 ? (\n                                <Typography className={classes.title} variant=\"h4\" component=\"h1\" gutterBottom>\n                                    Please Select {5 - nominationsElements.length} Nominations!\n                                </Typography>)\n                                : (\n                                    <Card variant=\"outlined\">\n                                        <Typography className={classes.title} variant=\"h3\" component=\"h1\" gutterBottom>\n                                            Thank You For Nominating!\n                                    </Typography>\n                                    </Card>)}\n                            <Typography className={classes.title} variant=\"h6\" component=\"h1\" gutterBottom>\n                                Nominations Are Saved! Feel Free To Come Back Anytime!\n                        </Typography>\n                        </Grid>\n                    </Grid>\n\n                    <Grid container className={classes.listContainer} spacing={3}>\n                        <Grid item xs={8}>\n                            <Card>\n                                {searchTermDisplay ? <Typography className={classes.title} variant=\"h4\" component=\"h1\" gutterBottom>\n                                    Results for \"{searchTermDisplay}\"\n                                </Typography> : <Typography className={classes.title} variant=\"h4\" component=\"h1\" gutterBottom>\n                                        Search Results\n                                </Typography>}\n                                <div className={classes.searchList}>\n\n                                    {searchListElements.map((omdbData, i) => {\n                                        let isNominated = false;\n                                        if (!nominationsComplete) {\n                                            for (let i = 0; i < nominationsElements.length; i++) {\n                                                if (nominationsElements[i].imdbID === omdbData.imdbID) {\n                                                    isNominated = true;\n                                                    break;\n                                                }\n                                            }\n                                        } else {\n                                            isNominated = true;\n                                        }\n                                        return (\n                                            <MovieItem apiKey={apiKey} bid={i} handleNominate={(event) => handleNominate(event)} data={omdbData} isNominated={isNominated} />\n                                        )\n                                    }\n                                    )}\n                                </div>\n                            </Card>\n                        </Grid>\n                        <Grid item xs>\n                            <Card>\n                                <Typography className={classes.title} variant=\"h4\" component=\"h1\" gutterBottom>\n                                    Nominations\n                                </Typography>\n                                <div className={classes.nominations}>\n                                    {nominationsElements.map((omdbData, i) =>\n                                        <NominationItem bid={i} handleRemoveNominate={(event) => handleRemoveNominate(event)} data={omdbData} />\n                                    )}\n                                </div>\n                            </Card>\n                        </Grid>\n                    </Grid>\n                </Box>\n            </Container>\n        </div>\n\n    );\n}\n","const StorageLocationKey = \"NominationsVinayShoppies\" \n\nexport function addNominationLocally(nomination){\n    let nominations = JSON.parse(localStorage.getItem(StorageLocationKey));\n    if(!nominations){\n        nominations = [];\n    }\n    nominations.push(nomination);\n    localStorage.setItem(StorageLocationKey, JSON.stringify(nominations));\n}\n\nexport function RemoveNominationLocally(index){\n    let nominations = JSON.parse(localStorage.getItem(StorageLocationKey));\n    if(!nominations){\n        nominations = [];\n        return;\n    }\n    nominations.splice(index,1);\n    localStorage.setItem(StorageLocationKey, JSON.stringify(nominations)); \n}\n\nexport function getNominationsLocally(){\n    return JSON.parse(localStorage.getItem(StorageLocationKey));\n}","import { createMuiTheme } from '@material-ui/core/styles';\n\n// A custom theme for this app\nconst theme = createMuiTheme({\n    palette: {\n        type: \"dark\",\n        primary: {\n            main: '#660066'\n        }\n    },\n});\n\nexport default theme;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport App from './App';\nimport theme from './theme';\n\nReactDOM.render(\n    <ThemeProvider theme={theme}>\n        {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n        <CssBaseline />\n        <App />\n    </ThemeProvider>,\n    document.querySelector('#root'),\n);\n"],"sourceRoot":""}